// Generated by gencpp from file hand_eye/eye2base.msg
// DO NOT EDIT!


#ifndef HAND_EYE_MESSAGE_EYE2BASE_H
#define HAND_EYE_MESSAGE_EYE2BASE_H

#include <ros/service_traits.h>


#include <hand_eye/eye2baseRequest.h>
#include <hand_eye/eye2baseResponse.h>


namespace hand_eye
{

struct eye2base
{

typedef eye2baseRequest Request;
typedef eye2baseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct eye2base
} // namespace hand_eye


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hand_eye::eye2base > {
  static const char* value()
  {
    return "525ac9dec1a89bc706b1140d349a6a9a";
  }

  static const char* value(const ::hand_eye::eye2base&) { return value(); }
};

template<>
struct DataType< ::hand_eye::eye2base > {
  static const char* value()
  {
    return "hand_eye/eye2base";
  }

  static const char* value(const ::hand_eye::eye2base&) { return value(); }
};


// service_traits::MD5Sum< ::hand_eye::eye2baseRequest> should match
// service_traits::MD5Sum< ::hand_eye::eye2base >
template<>
struct MD5Sum< ::hand_eye::eye2baseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hand_eye::eye2base >::value();
  }
  static const char* value(const ::hand_eye::eye2baseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_eye::eye2baseRequest> should match
// service_traits::DataType< ::hand_eye::eye2base >
template<>
struct DataType< ::hand_eye::eye2baseRequest>
{
  static const char* value()
  {
    return DataType< ::hand_eye::eye2base >::value();
  }
  static const char* value(const ::hand_eye::eye2baseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hand_eye::eye2baseResponse> should match
// service_traits::MD5Sum< ::hand_eye::eye2base >
template<>
struct MD5Sum< ::hand_eye::eye2baseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hand_eye::eye2base >::value();
  }
  static const char* value(const ::hand_eye::eye2baseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_eye::eye2baseResponse> should match
// service_traits::DataType< ::hand_eye::eye2base >
template<>
struct DataType< ::hand_eye::eye2baseResponse>
{
  static const char* value()
  {
    return DataType< ::hand_eye::eye2base >::value();
  }
  static const char* value(const ::hand_eye::eye2baseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HAND_EYE_MESSAGE_EYE2BASE_H
